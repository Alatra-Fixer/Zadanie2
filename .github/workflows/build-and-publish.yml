name: Build and Publish Docker Image

on:
  push:
    branches:
      - main  # pipeline uruchamiany przy pushu na branch "main"

jobs:
  build:
    name: Build, Scan & Publish
    runs-on: ubuntu-latest

    steps:
      # Pobranie kodu źródłowego
      - name: Checkout repository
        uses: actions/checkout@v3

      # Umożliwia emulację wielu architektur (wymagane dla buildx)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Konfiguracja Docker Buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Logowanie do DockerHub – dane potrzebne do przechowywania cache
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Logowanie do GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.RAFALHUB_TOKEN }}

      # Budowanie obrazu przy użyciu multi-arch i zdalnego cache
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          # Przyjęta strategia tagowania: "latest" oraz commit SHA
          tags: |
            ghcr.io/${{ github.repository_owner }}/pogoda:latest
            ghcr.io/${{ github.repository_owner }}/pogoda:${{ github.sha }}
          # Użycie cache – wysłanie i pobranie danych z repozytorium na DockerHub
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/my-cache:cache,mode=max
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/my-cache:cache,mode=max

      # Skanowanie obrazu pod kątem CVE – pipeline zakończy się błędem, gdy wykryte zostaną zagrożenia CRITICAL lub HIGH
      - name: Vulnerability scanning with Trivy
        uses: aquasecurity/trivy-action@v0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/pogoda:latest
          severity: CRITICAL,HIGH
          exit-code: 1
